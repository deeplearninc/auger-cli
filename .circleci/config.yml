version: 2.1

jobs:
  build:
    parameters:
      python_version:
        description: "Version of python to use"
        default: "3.7"
        type: string
    working_directory: ~/auger-cli
    docker:
      - image: circleci/python:<< parameters.python_version >>
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python<< parameters.python_version >>/site-packages
      - restore_cache:
          key: auger-cli-{{ arch }}-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: auger-cli-{{ arch }}-<< parameters.python_version >>-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python<< parameters.python_version >>/site-packages"
      # TODO: Fix flake8 issues
      # - run:
      #     command: |
      #       pipenv run python setup.py flake8
      - run:
          command: |
            pipenv run python setup.py test
      - store_artifacts:
          path: test-reports
          destination: tr1
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: auger-cli-{{ arch }}-3.7-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: auger-cli-{{ arch }}-3.7-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          command: |
            pipenv run python setup.py verify
      - run:
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          command: |
            pipenv run python setup.py bdist_wheel
      - run:
          command: |
            sudo pip install twine
            echo "Test deploy..."
          #  twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          name: build3.6
          python_version: "3.6"
      - build:
          name: build3.7
          python_version: "3.7"
      - deploy:
          requires:
            - build3.6
            - build3.7
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
